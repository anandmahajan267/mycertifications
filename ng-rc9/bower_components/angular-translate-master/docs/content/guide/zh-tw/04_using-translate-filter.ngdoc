@ngdoc overview
@name 使用翻譯過濾器
@description

# 使用翻譯過濾器

在[使用$translate 服務](#/guide/03_using-translate-service) 中，你已經學會如何通過註冊的翻譯標識使用`$translate`服務
去翻譯你的內容。當然，它很酷，但實際上你不想讓你的翻譯綁定到控制器或服務。你主要是想讓你的內容翻譯在視圖層，因為這是翻譯屬於的地方。

angular-translate 提供了一個過濾器組件,這樣你就可以在你的視圖層內翻譯你的翻譯標識，而不讓任何控制器或
服務知道。這意味著，你可以將翻譯邏輯從控制器或服務解耦合出來， 從而可以更新您的視圖層而不碰業務邏輯代碼。


## 一般用法
在Angular 中使用過濾器是非常簡單的。你可以在[這裡](http://docs.angularjs.org/guide/dev_guide.templates.filters.using_filters)閱讀有關的一切信息。

同樣通過angular-translate 的`translate` 過濾器， 我們可以簡單的將控制器的邏輯轉化到視圖層。
[使用$translate 服務](#/guide/03_using-translate-service#generalusage)。
簡單說 `translate` 過濾器是這樣的:

```
<ANY>{{ TRANSLATION_ID | translate }}</ANY>
```

因此，要更新我們的例子，我們在控制器中刪除`$translate` 服務的使用，並使用`translate` 過濾器將邏輯添加到視圖層。
就像這樣：

<pre>
<h1>{{'HEADLINE' | translate}}</h1>
<p>{{'PARAGRAPH' | translate}}</p>
</pre>

很容易哈？當然，你可以在這裡查看工作示例：

<doc:example module="myApp">
  <doc:source>
    <script>
      var translations = {
        HEADLINE: 'What an awesome module!',
        PARAGRAPH: 'Srsly!'
      };

      var app = angular.module('myApp', ['pascalprecht.translate']);

      app.config(['$translateProvider', function ($translateProvider) {
        // add translation table
        $translateProvider.translations('en', translations);
        $translateProvider.preferredLanguage('en');
      }]);

      app.controller('Ctrl', ['$scope', function ($scope) {

      }]);
    </script>
    <div ng-controller="Ctrl">
      <p>{{ 'HEADLINE' | translate }}</p>
      <p>{{ 'PARAGRAPH' | translate }}</p>
    </div>
  </doc:source>
</doc:example>

太棒了！現在，您的內容的視圖層內的翻譯沒有你的控制器邏輯與轉換邏輯來污染了。
當它涉及到一個視圖層更換時整個翻譯流程從你的業務邏輯分離出來，使您的應用程序更加靈活！
接下來的章節將告訴您如何用所提供的`translate` 指令這樣做。
<br>
<hr>
<center>Made with unicorn &hearts; love by [PascalPrecht](http://github.com/PascalPrecht)</center>