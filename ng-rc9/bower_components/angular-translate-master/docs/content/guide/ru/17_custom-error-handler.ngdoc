@ngdoc overview
@name Пользовательский обработчик ошибок
@description

# Пользовательский обработчик ошибок

Конечно, вы хотите иметь возможность использовать пользовательский обработчик. Кроме
`useMissingTranslationHandlerLog()` есть другой метод под названием `useMissingTranslationHandler()`,
который принимает имя фабрики, возвращающей пользовательский обработчик. Итак, как же это выглядит?

<pre>
var app = angular.module('myApp', ['pascalprecht.translate'], function ($translateProvider) {
  // tell angular-translate to use your custom handler
  $translateProvider.useMissingTranslationHandler('myCustomHandlerFactory');
});

// define custom handler
app.factory('myCustomHandlerFactory', function (dep1, dep2) {
  // has to return a function which gets a tranlation id
  return function (translationID) {
    // do something with dep1 and dep2
  };
});

</pre>

# Использование замещающего текста в случае ошибки

Иногда, может понадобиться указать замещающий текст (не ключ) для фронтэнда, чтобы переводчики или,
даже, конечные пользователи (плохая идея) могли видеть над чем еще нужно работать.
Теперь это возможно со слегка измененным пользовательским обработчиком ошибок.
Просто верните значение из обработчика ошибок в angular-translate.

<pre>
app.factory('customTranslationHandler', function () {
  return function (translationID, uses) {
    // return the following text as a translation 'result' - this will be
    // displayed instead of the language key.
    return 'NO DEFAULT KEY';
  };
});
</pre>

Конечно, вы можете добавить translationID к возвращаемому значению. Тогда, ответственный за переводы
человек увидит проблемный ключ!

<br>
<hr>
<center>Made with unicorn &hearts; love by [PascalPrecht](http://github.com/PascalPrecht)</center>
