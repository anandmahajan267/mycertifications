@ngdoc overview
@name 迁移指南
@description

# 1.1.1 -> 2.0.0

## 匿名换算表不再支持：
   
2.0.0之后版本匿名转换表不再被 angular-translate 支持。这是为了增加代码的一致性。请确保您的应用程序不包含这样的代码：

```js
$translateProvider.translations({
  'greetings' : 'Hello',
  // some other keys
});
```

要解决它，你只需要添加一门语言的键作为第一个参数：

```js
$translateProvider.translations('en', {
  'greetings' : 'Hello',
  // some other keys
});
$translateProvider.use('en');
```

## uses -> use

为了提高一致性我们决定将 `.uses()` 方法更名为 `.use()`. 这个是在 $translate 和 $translateProvider两者上都做的改变。
所以请确保您已更新所有出现这些方法的代码为新的样式。

## $translate() 现在是异步了

$translate 服务是基于现在的承诺。所以你不能再同步方式使用它了。请更新以下代码从：

```js
var stringFromService = $translate('translationId');
```

变成

```js
var stringFromService;
$translate('translationId').then(function(translation) {
  stringFromService = translation;
}, function(translationId){
  // Unable to translate given translationId
  stringFromService = translationId;
});
```

如果您仍然想同步的方式使用该服务，那么请使用
`$translate.instant(translationId, interpolateParams, interpolationId)` 方法，而不是直接的服务通话。
但是请注意， `instant` 方法不会等到异步加载完成。因此，要小心使用它。

## 事件现在只在$rootScope发射

所有 angular-translate 事件现在都在$rootScope层面发射, 这意味着你不能再简单监听`$scope.$on()`了。 现在你必须使用`$rootScope.$on()`。
这样做是广播事件时获得更好的性能。

## WTFPL -> MIT

angular-translate 不再根据 WTFPL 许可授权。现在是MIT的许可授权。

## 结构改变

angular-translate 项目目前完全在 github 上了, 这意味着所有的库都转移到这里了。(https://github.com/angular-translate)