@ngdoc overview
@name Запасні мови
@description

# Запасні мови

Ви вже можете налаштовувати бажану мову і користуватися підтримкою великої кількості мов. Тепер у
вас може виникнути питання, чи можливо навчити застосунок запасній мові? Відповідь - **так**.

## Реєстрація запасної мови

Навчити ваш застосунок запасній мові так само просто, як викликати метод `$translateProvider`а. Так,
звучить занадто просто, але це дійсно так. Скажімо, в нас є застосунок і ми реєструємо таблицю
перекладів для німецької мови.

<pre>
$translateProvider
  .translations('de', { /* ... */ });
</pre>

Тепер, уявімо, що існують такі ідентифікатори перекладу, що **доступні** в англійській таблиці
перекладів, але відсутні в німецькій. angular-translate у загальному випадку буде повертати даний
ідентифікатор перекладу, якщо він не може знайти для нього переклад в таблиці перекладів. Але, якщо
ви вказали запасну мову, що включає даний ідентифікатор перекладу, angular-translate поверне цей
переклад.

То ж, давайте зробимо англійську запасною мовою для нашого застосунку. Правда, для початку на треба
додати саму мову.

<pre>
$translateProvider
  .translations('de', { /* ... */ })
  .translations('en', { /* ... */ });
</pre>

Тепер ми кажемо angular-translate використовувати англійську мову у якості запасної.

<pre>
$translateProvider
  .translations('de', { /* ... */ })
  .translations('en', { /* ... */ })
  .fallbackLanguage('en');
</pre>

Ось так. Тепер, якщо ідентифікатор перекладу відсутній у німецькій таблиці перекладів,
angular-translate спробує знайти його в англійській. Правда легко?

## Реєстрація стека запасних мов

А що як у вас є набір запасних мов? angular-translate може працювати з ними теж! Вам достатньо
вказати запасну мову як масив:

<pre>
$translateProvider
  .translations('de', { /* ... */ })
  .translations('en', { /* ... */ })
  .translations('fr', { /* ... */ })
  .fallbackLanguage(['en', 'fr']);
</pre>

Тепер, якщо angular-translate не зможе знайти ваш ідентифікатор перекладу в таблиці перекладів для
англійської мови (що є першою запасною мовою), він буде проходити інші вказані запасні мови і
дивитися там. Це білет в один кінець, тобто, в даному випадку, ітерація починається з `en` і
проходить до `fr`. Ви можете вказати стільки запасних мов, скільки захочете.

## Зміна запасної мови під час виконання

Так, навіть **таке** можливо! Бувають випадки, коли вам може знадобитися змінити вашу запасну мову
під час виконання. Або навіть весь стек запасних мов! Наприклад, уявіть випадок, коли ви вказуєте
німецьку бажаною мовою і хочете впевнитися, що англійська є запасною. Без проблем, ми вже вміємо
таке робити. Тепер, уявіть, що мову застосунку змінено на англійську і ви хочете використовувати
французьку у якості запасної, але англійська вже вказана у якості запасної мови.

Ви можете змінити запасну мову під час виконання за допомогою `fallbackLanguage()` метода сервіса
`$translate`. Ось як це може виглядати:

<pre>
$scope.changeLanguage = function (langKey) {
  if (langKey === 'en') {
    $translate.fallbackLanguage('fr');
  } else if (langKey == 'de') {
    $translate.fallbackLanguage('en');
  }
  $translate.use(langKey);
};
</pre>

Не забудьте, що ключ запасної мови є відправною точкою для перегляду запасних мов. Якщо ваша запасна
мова задана як `en, fr, de` і ви змінюєте запасну мову на `fr`, то у випадку відсутності
ідентифікатора перекладу, angular-translate буде шукати запасний переклад тільки в `de`.

## Зміна всього стека запасних мов під час виконання

Аналогічно попередньому прикладу ви можете зробити так:

<pre>
$scope.changeLanguage = function (langKey) {
  $translate.fallbackLanguage(['de', 'en', 'fr']);
  $translate.use(langKey);
};
</pre>

При зміні всього стека запасних мов ви також змінюєте порядок, в якому angular-translate їх
продивляється. Так, власне, процес перегляду залишається таким самим, але ви змінюєте порядок
перегляду запасних мов.

## Обмеження перегляду запасних мов

Додатковою можливістю при перегляді стека запасних мов є обмеження мов, які необхідно продивлятися
на наявність ключів перекладу. В деяких випадках коли користувач хоче продивлятися лише частину
доступних запасних мов без видалення деяких вже оголошених чи завантажених мов. Це теж можливо!
Як вказано вище, перегляд стека запасних мов відбувається 'зліва на право'. Так, якщо ми хочемо
почати перегляд після 'de' в стеці 'de, en, fr', ми повинні визначити початкову точку перегляду за
допомогою метода 'useFallbackLanguage()'.

<pre>
  // langKey is 'en'
  $scope.changeLanguage = function (langKey) {
  $translate.fallbackLanguage(['de', 'en', 'fr']);
  $translate.useFallbackLanguage(langKey);
};
</pre>

З цього момент всі переклади на 'de' будуть ігноруватися і пропускатися.
Важливе зауваження: Якщо мова, що ігнорується, є бажаною або поточною, переклад на цю мову буде
здійснюватися навіть якщо вона має бути пропущена!
<br>
<hr>
<center>Made with unicorn &hearts; love by [PascalPrecht](http://github.com/PascalPrecht)</center>
