@ngdoc overview
@name Negociación de lenguajes
@description

# Negociación de lenguajes

angular-translate soporta una funcionalidad llamada "Negociación de lenguajes" (Language Negotiation), con la cual se puede declarar relaciones entre claves de lenguaje similares (por ejemplo, 'en_US', inglés de Estados Unidos, en lugar de 'en').

¿Qué significa esto? Supongamos que usted tiene tablas de traducción con las claves de lenguaaje `en` y `es`.

<pre>
$translateProvider
  .translations('en', { /* ... */ })
  .translations('es', { /* ... */ });
</pre>

.. y que también le dice a angular-translate que debería tratar de determinar el lenguaje preferido de su aplicación por sí solo, usando el método `.determinePreferredLanguage()`.

<pre>
$translateProvider
  .translations('en', { /* ... */ })
  .translations('es', { /* ... */ })
  .determinePreferredLanguage();
</pre>

En [Determinar el lenguaje preferido automáticamente](#/guide/07_multi-language#multilenguaje_determinar-el-lenguaje-preferido-automáticamente)
aprendimos que al usar este método sin parámetros angular-translate tratatá de determinar el lenguaje preferido accediendo a propiedades del navegador.

Ahora bien, ¿qué pasa si si navegador devuelve `en_US` en lugar de `en`?
Normalmente, esto provocaría un error, porque `en_US` es, estrictamente hablando, una clave de lenguaje distinta.
Lo que desearíamos es que angular-translate fuese capaz de reconocer la relación entre  `en_US` y `en`.

Pues bien, angular-translate no nos defrauda. Se puede utilizar el sistema de negociación de lenguajes mediante el método`registerAvailableLanguageKeys()`. Este método acepta un array de claves de lenguajes que usted soporte en su aplicación. Una vez que éstas estén configuradas, angular-translate será capaz de mapear un `en_US` devuelto por su navegador a la clave `en` efectivamente usada por su aplicación.

Para el caso de uso que discutíamos anteriormente, el código quedaría así:

<pre>
$translateProvider
  .translations('en', { /* ... */ })
  .translations('de', { /* ... */ })
  .registerAvailableLanguageKeys(['en', 'es'], {
    'en_US': 'en',
    'en_UK': 'en',
    'es_ES': 'es',
    'es_AR': 'es'
  })
  .determinePreferredLanguage();
</pre>

Si el navegador nos devolviera `en_US` o `en_UK`, angular-translate configuraría `en` como lenguaje preferido. Deberíamos también mencionar que todo esto sólo tiene sentido cuando se utiliza el método  `determinePreferredLanguage()`

<br>
<hr>
<center>Hecho con &hearts; de unicornio y con amor por [PascalPrecht](http://github.com/PascalPrecht)</center>
