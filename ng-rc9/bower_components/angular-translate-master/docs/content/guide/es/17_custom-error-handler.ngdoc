@ngdoc overview
@name Manejo de errores personalizado
@description

# Manejo de errores personalizado

Por supuesto que usted querrá ser capaz de usar su propio manejo de errores personalizado (custom error handler). Además de `useMissingTranslationHandlerLog()`, hay otro método llamado `useMissingTranslationHandler()`, el cual espera el nombre de una "factory" que devuelve un manejador personalizado. Así es como se vería:

<pre>
var app = angular.module('myApp', ['pascalprecht.translate'], function ($translateProvider) {
  // decirle a angular-translate que use su propio manejo de errores
  $translateProvider.useMissingTranslationHandler('myCustomHandlerFactory');
});

// definir un manejo personalizado
app.factory('myCustomHandlerFactory', function (dep1, dep2) {
  // tiene que utilizar una función que devuelva la una clave de traducción
  return function (translationID) {
    // hacer algo con dep1 y dep2
  };
});

</pre>

# Uso de un texto de reemplazo por defecto, en caso de haber errores

A veces, usted querrá proveer un reemplazo del texto (que no sea la clave de traducción) para la que los traductores, o incluso los usuarios finales (probablemente esto sea una mala idea) puedan ver en dónde hace falta trabajar.

Esto es posible con una versión ligeramente modificada del Manejador de Errores Personalizado.
Simplemente devuélvale un valor al framework de angular-translate desde dentro del manipulador de errores.

<pre>
app.factory('customTranslationHandler', function () {
  return function (translationID, uses) {
    // devolver el texto siguiente como "resultado" de la traducción - esto será
    // mostrado en lugar de la clave de traducción
    return 'NO HAY CLAVE POR DEFECTO';
  };
});
</pre>

Desde luego, puede agregar la clave de traducción al valor devuelto, para que la persona a cargo de las traducciones sepa cuál clave originó el error.
<br>
<hr>
<center>Hecho con &hearts; de unicornio y con amor por [PascalPrecht](http://github.com/PascalPrecht)</center>
