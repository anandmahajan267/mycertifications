@ngdoc overview
@name Conceptos generales
@description

# Conceptos generales

Esta imagen muesta, de manera algo abstracta, cómo angular-translate está estructurado, y los
cómo se interconectan los diferentes componentes que provee.

<img class="pull-right" style="padding-left: 3em;" src="img/guide/conceptual_overview.png">

## El meollo del asunto
Como se puede ver, angular-translate provee como componentes una directiva y un filtro, que se pueden usar
para traducir el contenido de su aplicación. La directiva aparece encima del componente "filtro" porque, internamente, lo usa.

La siguiente capa se pone más interesante: tanto la directiva como el filtro utilizan el servicio `$translate`. Lo cual significa que
cuando los contenidos de su aplicación se traducen con una directiva, quien en realidad está traduciendo es el servicio.
Esto también significa que se puede traducir contenido no solamente en la capa "view" (vista), de manera declarativa, sino también
en la capa de negocios (por supuesto, sólo si es necesario), por ejemplo en un controlador u otro servicio.

Dentro del servicio `$translate` se pueden observar algunos subcomponentes, los cuales se usan para traducir contenido. Entraremos en
detalles sobre esto más adelante, pero he aquí un pantallazo general:


## Interpoladores (Interpolators)
El cuadro de la derecha representa servicios posibles de interpolación que `$translate` utiliza para
interpolar sus traducciones contra valores de variables que usted pueda querer utilizar. Si por ahora no entiende qué significa todo esto,
 no se preocupe. Mas tarde aprenderá todo lo que haga falta sobre los interpoladores.
 De todos modos, los servicios de interpolación están desacoplados del núcleo central (core), lo cual significa que se pueden instalar como
 paquetes adicionales. Hay un servicio de interpolación "por defecto", que ya viene incluido en `angular-translate`.

Los interpoladores influencian la sintaxis a usar en sus traducciones. El servicio de interpolación por defecto usa el núcleo central (core)
de interpolación de Angular, de modo que, si usted ya está familiarizado con él, no tiene que aprender nada nuevo. El servicio de interpolación
**MessageFormat** usa una sintaxis diferente, pero eso lo veremos más adelante.

## Manipuladores (handlers) de traducciones faltantes
El cuadro de la derecha muestra los manipuladores que se ofrecen para traducciones faltantes.
 Son los que se ejecutan cuando `$translate` debe traducir una clave que no existe. No es obligatorio utilizar dichos
 manipuladores, pero si usted lo desea, angular-translate viene con un servicio de logging (bitácora) que se puede instalar como extensión.
 Además, usted puede implementar y usar su propio manipulador.

## Cargadores asincrónicos
Por supuesto que usted querrá ser capaz de cargar sus datos de traducción asincrónicamente, para
 acelerar la performance de sus aplicaciones. angular-translate soporta el uso de los llamados "cargadores asincrónicos" (asynchronous loaders),
 los cuales son muy fáciles de usar. Hay dos tipos de cargador asincrónico: `urlloader` y `staticFilesLoader`. Cada uno de ellos se aplica a un
 escenario específico de carga de datos. Y de todos modos (por supuesto), usted puede programar su propio cargador si quiere.

## Almacenamiento
Como es bastante común que una aplicación con suporte multi-idioma tenga que recordar cuál lenguaje el usuario ha elegido durante la ejecución,
angular-translate provee la forma de usar cualquier tipo de almacenamiento. Primero establece si se debe recurrir al almacenamiento,
y, si es así, trata de encontrar pares clave-valor específicos en el almacenamiento configurado, para determinar qué idioma debería usarse.

angular-translate ya viene con soporte para  localStorage y cookieStorage. Se pueden usar fácilmente, instalando paquetes adicionales.

Ahora usted ya tiene un pantallazo general de cómo está estructurado angular-translate, qué tipo de funcionalidades provee, y cómo se
interconectan sus componentes. En el capítulo siguiente, veremos cómo empezar a usar angular-translate.

<br>
<hr>
<center>Hecho con &hearts; de unicornio y con amor por [PascalPrecht](http://github.com/PascalPrecht)</center>
