@ngdoc overview
@name Guía
@description

# La manera más fácil de agregar internacionalización (i18n) en sus aplicaciones Angular

#### ¡Agregue i18n y l10n a sus aplicaciones Angular!

<br>
¿Quiere agregar **i18n** y **l10n** en sus aplicaciones Angular, pero no sabe cómo? Con angular-translate, está todo resuelto.

Angular-translate viene con numerosas herramientas y extensiones muy útiles, y le ofrece una enorme flexibilidad a la hora de
aplicar customizaciones.
Estas son algunas de las interesantes funcionalidades de angular-translate:

## Funcionalidades

- Componentes (filters/directives) para traducir su contenido
- Carga asincrónica de datos i18n
- Soporte de Pluralización, utilizando [**MessageFormat.js**](https://github.com/SlexAxton/messageformat.js)
- Expandible a través de interfaces fáciles de usar

Si le gusta este módulo y lo usa en sus proyectos ¡hágalo público en
[ngmodules](http://ngmodules.org/modules/angular-translate) y cliquee en el botón
"_I use it_"! ¡angular-translate es fácil de instalar y aún más fácil de usar!

A través de este documento, usted aprenderá a usar angular-translate, y sus útiles funcionalidades.
Hagamos una introducción rápida:


## Introducción rápida
Instale el módulo via Bower:

```
$ bower install angular-translate
```

Asegúrese de que esté embebido en su documento HTML.

<pre>
<script src="path/to/angular-translate.js"></script>
</pre>


Inyecte el módulo como dependencia en su aplicación:

<pre>
var app = angular.module('myApp', ['pascalprecht.translate']);
</pre>

Enséñele a su aplicación a traducir:

<pre>
app.config(['$translateProvider', function ($translateProvider) {
  $translateProvider.translations('en', {
    'TITLE': 'Hello',
    'FOO': 'This is a paragraph'
  });

  $translateProvider.translations('de', {
    'TITLE': 'Hola',
    'FOO': 'Esto es un párrafo'
  });

  $translateProvider.preferredLanguage('en');
}]);
</pre>

Traduzca su aplicación:

<pre>
 <h1>{{ 'TITLE' | translate }}</h1>
 <p>{{ 'FOO' | translate }}</p>
</pre>

  Este es simplemente un ejemplo rápido de cómo trabaja angular-translate. En pocas palabras,
  todo consiste en "_proveer datos i18n, comunicárselos a angular-translate, y hacerle saber cómo usar
  sus componentes para interpretar dichas traducciones (contra ciertos valores)._".
  Fácil ¿no?


  ## Recursos útiles
  En la web hay herramientas relacionadas que le pueden interesar, así que por favor tome nota:

  - [Tutorial de ng-newsletter.com](http://www.ng-newsletter.com/posts/angular-translate.html)
  - [angular-translate y cargas parciales](http://technpol.wordpress.com/2013/11/02/adding-translation-using-angular-translate-to-an-angularjs-app/)
  - [Ejemplos y demos](https://github.com/angular-translate/angular-translate/wiki/Demos) - Actualmente en plnkr.co
  - [Tutorial de angularjs.de](http://angularjs.de/artikel/angularjs-i18n-ng-translate) - (en alemán)
  - [angular-translate en GitHub](http://github.com/PascalPrecht/angular-translate) - El repositorio GitHub
  - [angular-translate en ngmodules.org](http://ngmodules.org/modules/angular-translate)
  - [Lista de correo de angular-translate](https://groups.google.com/forum/#!forum/angular-translate) - ¡Discusiones, preguntas, y otras yerbas!

  ## Agradecimiento a la comunidad
  ¡Hasta ahora hemos tenido muy valiosos comentarios y sugerencias de nuestra comunidad! Más y más gente utiliza este módulo, y
  siempre están agradecidos por él, y por el soporte que reciben. Simplemente quiero que lo sepan:
  Nada de esto habría sido posible possible sin estos [grandes colaboradores](http://github.com/PascalPrecht/angular-translate/contributors)
  y todo quien venga con nuevas ideas y requerimientos de nuevas funcionalidades. Así que: ¡**GRACIAS**!

  <br>
  <hr>
  <center>Hecho con &hearts; de unicornio y con amor por [PascalPrecht](http://github.com/PascalPrecht)</center>
