<!DOCTYPE html>
<html ng-app='app'>

<head>
  <meta charset="utf-8">
  <title translate="load.dynamic.TITLE">Load dynamic files</title>
  <style>body { text-align: center; }</style>
</head>

<body ng-controller="ctrl">

  <p>
    <a href="#" ng-click="setLang('en_US')">English</a>
    |
    <a href="#" ng-click="setLang('ru_RU')">Русский</a>
  </p>

  <h1 translate>load.dynamic.HEADER</h1>
  <h2 translate>load.dynamic.SUBHEADER</h2>

<script src="../bower_components/angular/angular.js"></script>
<script src="../bower_components/angular-cookies/angular-cookies.js"></script>
<script src="../dist/angular-translate.js"></script>
<script src="../dist/angular-translate-storage-cookie/angular-translate-storage-cookie.js"></script>
<script src="../dist/angular-translate-loader-url/angular-translate-loader-url.js"></script>

<script>
angular.module('app', ['pascalprecht.translate', 'ngCookies'])

.config(['$translateProvider', function($translateProvider){

  // Register a loader for the dynamic page
  // So, the module will search missing translation tables under the specified urls.
  // Those urls are [specified_url]?lang=[langKey].
  //
  // Note that to run this example you have to start a server first.
  // To run the server use a 'grunt server' command
  $translateProvider.useUrlLoader('http://localhost:3005/demo/get_lang');

  // Tell the module what language to use by default
  $translateProvider.preferredLanguage('en_US');

  // Tell the module to store the language in the cookies
  $translateProvider.useCookieStorage();

}])

.controller('ctrl', ['$scope', '$translate', function($scope, $translate) {

  $scope.setLang = function(langKey) {
    // You can change the language during runtime
    $translate.use(langKey);
  };

}]);
</script>

</body>
</html>
